name: CI

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  ruff:
    name: Ruff checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5.0.0
      - name: Install python
        uses: actions/setup-python@v6.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.7.0
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - name: Install the project
        run: uv sync --locked --all-extras --dev
      - name: Ruff lint
        run: uv run ruff check
      - name: Ruff format
        run: uv run ruff format --check

  nix-fmt:
    name: Nix checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5.0.0
      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Nix format
        run: nix-shell ./shell.nix --command "treefmt --ci"

  pytest:
    name: Unit tests
    runs-on: ubuntu-latest
    needs: [ruff, nix-fmt]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5.0.0
      - name: Install python
        uses: actions/setup-python@v6.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.7.0
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - name: Install the project
        run: uv sync --locked --all-extras --dev
      - name: pytest
        run: uv run pytest

  uv-build:
    name: Build with UV
    runs-on: ubuntu-latest
    needs: [pytest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5.0.0
      - name: Install python
        uses: actions/setup-python@v6.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.7.0
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - name: Install the project
        run: uv sync --locked
      - name: Run yves
        run: uv run yves --help

  nix-build:
    name: Build with Nix
    runs-on: ubuntu-latest
    needs: [pytest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5.0.0
      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Build
        run: nix-shell ./shell.nix --command "just nix-build"
      - name: Run yves
        run: ./result/bin/yves --help
