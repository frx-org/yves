name: CI

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  ruff:
    name: Ruff checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5.0.0
      - name: Install python
        uses: actions/setup-python@v6.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v7.1.1
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - name: Install the project
        run: uv sync --locked --dev
      - name: Ruff lint
        run: uv run ruff check
      - name: Ruff format
        run: uv run ruff format --check

  basedpyright:
    name: Basedpyright checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5.0.0
      - name: Install python
        uses: actions/setup-python@v6.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v7.1.1
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - name: Install the project
        run: uv sync --locked --dev
      - name: Basedpyright type check
        run: uv run basedpyright

  nix-fmt:
    name: Nix checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5.0.0
      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Nix format
        run: nix-shell ./shell.nix --command "treefmt --ci"

  prettier:
    name: Prettier checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5.0.0
      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Prettier format
        run: nix-shell ./shell.nix --command "prettier --check '**/*.md'"

  just:
    name: Just checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5.0.0
      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Just format
        run: nix-shell ./shell.nix --command "just --fmt --unstable --check"

  pytest:
    name: Unit tests
    runs-on: ubuntu-latest
    needs: [ruff, nix-fmt, basedpyright, prettier, just]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5.0.0
      - name: Install python
        uses: actions/setup-python@v6.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v7.1.1
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - name: Install the project
        run: uv sync --locked --dev
      - name: pytest
        run: uv run pytest

  uv-build:
    name: Build with UV (${{ matrix.runner}}, python ${{ matrix.python-version }})
    runs-on: ${{ matrix.runner }}
    needs: [pytest]
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        runner: ["ubuntu-latest", "macos-latest", "macos-15-intel"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5.0.0
      - name: Install python
        uses: actions/setup-python@v6.0.0
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install uv
        uses: astral-sh/setup-uv@v7.1.1
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - name: Install the project
        run: uv sync --locked
      - name: Run yves
        run: |
          uv run yves --help
          uv run yves version

  nix-build:
    name: Build with Nix
    runs-on: ubuntu-latest
    needs: [pytest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5.0.0
      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Build
        run: nix-shell ./shell.nix --command "just nix-build"
      - name: Run yves
        run: ./result/bin/yves --help
